# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: py-app-CI

on: [push]

jobs:
  py-CI:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set Variables
      id: set-var
      run: |
        echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
        echo "ECR_REPOSITORY=wy-redispy" >> $GITHUB_ENV
        echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV
        echo "GIT_EMAIL=jydianasuh@gmail.com" >> $GITHUB_ENV
        echo "GIT_NAME=deedaworld" >> $GITHUB_ENV
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      working-directory: ./flask-app
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Docker Image Build
      id: build-image
      working-directory: ./flask-app/
      run: |
        docker build -t ${{ env.ECR_REGISTRY }}/${{ env. ECR_REPOSITORY }}:${{env.IMAGE_TAG}} .

    - name: Docker Image Push
      id: push-image
      run: |
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY}}:${{ env.IMAGE_TAG }}

    - name: Checkout Deployment Repository
      uses: actions/checkout@v3
      with:
        repository: deedaworld/wy-dep
        ref: main
        token: ${{ secrets.GH_TOKEN }}

    - name: k8s manifest update
      run: |
        sed -i "s@ \
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:.*@ \
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG}}@g" py-deployment.yml

    - name: Commit and Push
      run: |
        git config user.email ${{ env.GIT_EMAIL }}
        git config user.name ${{ env.GIT_NAME}}
        git add py-deployment.yml
        git commit -m "Update image tag"
        git push origin main
